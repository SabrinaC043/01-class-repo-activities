* {
  box-sizing: border-box;
}

body {
  font-family: Arial;
  margin: 0;
}

header {
  padding: 40px;
  text-align: center;
  background: #13293d;
  color: #fff;
}

/* 
What happens when we set the display property to flex? 
TODO:  Boxes are sorted to horizontally and within a container.
*/
nav {
  display: flex;
  background-color: #d8a47f;
}

nav a {
  color: #13293d;
  padding: 14px 20px;
  text-decoration: none;
  text-align: center;
}

/* 
What is the flex-wrap property? 
TODO: Flex wrap allows you to specify whether or not you want your content to stack on top of eachother or not when space is limited or media screen is smaller than desktop*/

*/
main {
  display: flex;
  flex-wrap: wrap;
}

aside {
  flex: 1;
  background-color: #b9c6ae;
  padding: 80px;
  text-align: center;
}


footer {
  padding: 20px;
  text-align: center;
  background: #13293d;
  color: #fff;
}

/* 
What does the justify-content property do? 
TODO: Write your answer here : Aligns on opposite axis of the flex-direction. */

.products { 
  flex: 4;
  background-color: #fff;
  padding: 20px;
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
}


/* What is the flex property a shorthand property for?
What is it doing here? 
TODO: Write your answer here: Flex Grow is to have essentially 
the amount of screen space one box takes up compared to the other sizes amongst other elements that take up one line of space. flex: flex-grow flex-shrink flex-basis*/  

.card {
  border-style: solid;
  border-width: 1px;
  border-radius: 10px;
  padding: 10px;
  flex: 0 0 400px;
}

.card header {
  padding: 20px;
}

.card p {
  text-align: center;
}

.card img {
  width: 100%;
}

/* 
What does the flex-direction property define?
Flex direction: helps determine whether the direction is going to be a column (up&down) or a row (left to right)

What is it doing here? 
TODO: Write your answer here : ensuring the same rule applies when screen is being expanded or shrunk. 
*/

@media screen and (max-width: 768px) {
  main,
  nav {
    flex-direction: column;
  }
}



